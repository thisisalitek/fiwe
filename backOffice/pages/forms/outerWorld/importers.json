{
	"index":[
		{
			"type": "grid",
			"fields": {
				"name":{"text":"Name", "type":"string"},
				"type":{"text":"Type", "type":"lookup", "staticValues":"importerTypes"},
				"passive":{"text":"Passive?","type":"boolean"}
			},
			"options": {
				"selection": true,
				"filter": true,
				"buttons": {
					"add": true,
					"edit": true,
					"delete": true,
					"view": false,
					"print": false,
					"copy": true
				}
			},
			"dataSource": {
				"url":"/db/importers"
			}

		}
	],
	"form": [
		{
			"type":"form",
			"fields": {
				"name":{"text":"Name", "type":"string", "col":4},
				"type":{"text":"Type", "type":"lookup", "staticValues":"importerTypes","onchange":"importerTypeChange(this.value)", "col":4},
				"viaLocalConnector":{"text":"via Local Connector","type":"boolean", "onchange":"importerTypeChange()", "visible":false, "col":4},
				"localConnectorGroup1":{
					"text":"Local Connector",
					"collapsed":false,
					"visible":false,
					"fields":{
						"localConnector.id":{"text":"ID", "type":"string", "col":3},
						"localConnector.password":{"text":"Password", "type":"string", "col":3},
						"btnTestConnector":{"text":"Test Connector", "type":"button", "href":"javascript:uploadTest()", "col":3}
					}
				},
				"fileGroup1":{
					"text":"File Upload",
					"collapsed":false,
					"visible":false,
					"fields":{
						"fileUpload.type":{"text":"File Upload Type", "type":"lookup", "staticValues":"fileUploadTypes","onchange":"fileUploadTypeChange(this.value)", "col":3},
						"divider2":{"type":"w-100"},
						"csvGroup1":{
							"visible":false,
							"showHeader":false,
							"fields":{
								"fileUpload.csv.separator":{"text":"Separator", "type":"lookup", "lookup":{";":"Semicolon(;)",",":"Comma(,)","\t":"Tab character(\t)"}, "col":2},
								"fileUpload.csv.decimalPointer":{"text":"Decimal Pointer","title":"Decimal Pointer for CSV Numbers", "type":"lookup", "lookup":{".":"dot(.)",",":"comma(,)"}, "col":2},
								"fileUpload.csv.dateFormat":{"text":"Date Format", "type":"string", "value":"dd/mm/yyyy", "col":2},
								"fileUpload.csv.timeFormat":{"text":"Time Format", "type":"string", "value":"hh:mm:ss", "col":2}
							}
						},
						"excelGroup1":{
							"visible":false,
							"showHeader":false,
							"fields":{
								"fileUpload.excel.sheetNameFunc":{"text":"Sheet Name Function","type":"code", "rows":10, "editorOptions":{"language":"javascript"}, "value":"(s) => {\n\treturn s.toUpperCase()\n}", "col":6},
								"fileUpload.excel.rowsFunc":{"text":"Rows Function", "type":"code", "rows":10, "editorOptions":{"language":"javascript"}, "value":"(rows,sheetName) => {\n\trows.forEach(e => {\n\t\te[0]=(e[0] || \"\").toUpperCase()\n\t})\n\treturn rows\n}", "col":6}
							}
						},
						"testFileUpload":{"text":"Upload File", "type":"file", "col":6},
						"btnTestUpload":{"text":"Upload Test", "type":"button", "href":"javascript:uploadTest()", "col":3}
					}
				},
				"fileSystem1":{
					"text":"File System",
					"collapsed":false,
					"visible":false,
					"fields":{
						"path":{"text":"Path", "type":"string", "col":6},
						"afterImport":{"text":"After Import", "type":"string", "col":6},
						"fileSystem.type":{"text":"Read File Type", "type":"lookup", "staticValues":"fileSystemTypes","onchange":"fileSystemTypeChange(this.value)", "col":4},
						"csvGroup2":{
							"visible":false,
							"showHeader":false,
							"fields":{
								"fileSystem.csv.separator":{"text":"Separator", "type":"lookup", "lookup":{";":"Semicolon(;)",",":"Comma(,)","\t":"Tab character(\t)"}, "col":2},
								"fileUpload.csv.decimalPointer":{"text":"Decimal Pointer","title":"Decimal Pointer for CSV Numbers", "type":"lookup", "lookup":{".":"dot(.)",",":"comma(,)"}, "col":2},
								"fileUpload.csv.dateFormat":{"text":"Date Format", "type":"string", "value":"dd/mm/yyyy", "col":2},
								"fileUpload.csv.timeFormat":{"text":"Time Format", "type":"string", "value":"hh:mm:ss", "col":2}
							}
						},
						"excelGroup2":{
							"visible":false,
							"showHeader":false,
							"fields":{
								"fileSystem.excel.sheetNameFunc":{"text":"Sheet Name Function","type":"code", "rows":10, "value":"(s) => {\n\treturn s.toUpperCase()\n}", "col":6},
								"fileSystem.excel.rowsFunc":{"text":"Rows Function", "type":"code", "rows":10, "value":"(rows,sheetName) => {\n\trows.forEach(e => {\n\t\te[0]=(e[0] || \"\").toUpperCase()\n\t})\n\treturn rows\n}", "col":6}
							}
						}
					}
				},
				"mongoDbGroup1":{
					"text":"Mongo DB",
					"collapsed":false,
					"visible":false,
					"fields":{
						"mongoDb.uri":{"text":"Connection URI", "type":"string", "col":12,"value":"mongodb://localhost:27017/databaseName"},
						"mongoDb.script":{"text":"Mongo Shell Script", "type":"code", "col":12, "rows":20 , "value":"var result=db.collection('testCollection').find({name:{$regex: '.*ali.*', $options: 'i'}})\nreturn result"}
					}
				},
				"sqlServerGroup1":{
					"text":"SQL Server",
					"collapsed":false,
					"visible":false,
					"fields":{
						"sqlServer.connectionType":{"text":"Connection Type", "type":"lookup", "lookup":{"connectionString":"Connection String","configObject":"ConfigObject"},"onchange":"sqlServerConnectionTypeChanged(this.value)", "col":4},
						"sqlServer.connectionString":{"text":"Connection String", "type":"string", "visible":false, "value":"Server=localhost,1433;Database=database;User Id=username;Password=password;Encrypt=true"},
						"sqlServer.configObject":{"text":"Config Object", "type":"json", "visible": false,"col":12, "rows":10,"value":"{\n\t\"user\":\"sa\"\n\t\"server\":\"localhost\"\n}"},
						"sqlServer.query":{"text":"SQL Query", "type":"code", "col":12, "rows":20 , "value":"SELECT * FROM Table1;"}
					}
				},
				"mySqlGroup1":{
					"text":"MySQL",
					"collapsed":false,
					"visible":false,
					"fields":{
						"warn1":{"text":"MySQL is not ready yet.", "type":"label", "class":"alert-warning"}
					}
				},
				"postgreSQLGroup1":{
					"text":"PostgreSQL",
					"collapsed":false,
					"visible":false,
					"fields":{
						"warn1":{"text":"postgreSQL is not ready yet.", "type":"label", "class":"alert-warning"}
					}
				},
				"wcfGroup1":{
					"text":"Wcf Service",
					"collapsed":false,
					"visible":false,
					"fields":{
						"warn1":{"text":"Wcf Service is not ready yet.", "type":"label", "class":"alert-warning"}
					}
				},
				"restApiGroup1":{
					"text":"Rest API",
					"collapsed":false,
					"visible":false,
					"fields":{
						"warn1":{"text":"Rest API is not ready yet.", "type":"label", "class":"alert-warning"}
					}
				},
				"passive":{"text":"Passive?","type":"boolean", "visible":false},
				"resultGroup1":{
					"text":"Test Results",
					"collapsed":true,
					"visible":true,
					"fields":{
						"testResult":{"text":"Output", "type":"code", "col":12, 
							"editorOptions":{ 
								"language":"json",
								"contextmenu":false,
								"readOnly":true,
								"tabSize":4
							}
						}
					}
				}
			},
			"dataSource": {
				"url":"/db/importers"
			},
			"script":[
				"function uploadTest(){",
				"let formData=bulkFormData('#mainCtrl')",
				"postMan('/db/importers/uploadTest',{type:'POST',data:formData})",
				".then(result=>{ ",
				"console.log('result:', result)",
				" document.querySelector('#testResult').editor.setValue(JSON.stringify(result,null,2))",
				"})",
				".catch(err=>{document.querySelector('#testResult').editor.setValue(JSON.stringify(err,null,2))})",
				"",
				"}",
				"function importerTypeChange(){",
				"var val=document.querySelector('select[data-field=\"type\"]').value",
				"document.querySelector('#col_viaLocalConnector').classList.add('d-none')",
				"document.querySelector('#col_card-localConnectorGroup1').classList.add('d-none')",
				"document.querySelector('#col_card-fileGroup1').classList.add('d-none')",
				"document.querySelector('#col_card-fileSystem1').classList.add('d-none')",
				"document.querySelector('#col_card-mongoDbGroup1').classList.add('d-none')",
				"document.querySelector('#col_card-sqlServerGroup1').classList.add('d-none')",
				"document.querySelector('#col_card-mySqlGroup1').classList.add('d-none')",
				"document.querySelector('#col_card-postgreSQLGroup1').classList.add('d-none')",
				"document.querySelector('#col_card-wcfGroup1').classList.add('d-none')",
				"document.querySelector('#col_card-restApiGroup1').classList.add('d-none')",
				"switch(val){",
				"case 'fileUpload':",
				"document.querySelector('#col_card-fileGroup1').classList.remove('d-none')",
				"fileUploadTypeChange()",
				"break",
				"case 'fileSystem':",
				"document.querySelector('#col_card-fileSystem1').classList.remove('d-none')",
				"fileSystemTypeChange()",
				"break",
				"case 'mongoDb':",
				"document.querySelector('#col_card-mongoDbGroup1').classList.remove('d-none')",
				"break",
				"case 'sqlServer':",
				"document.querySelector('#col_card-sqlServerGroup1').classList.remove('d-none')",
				"sqlServerConnectionTypeChanged()",
				"break",
				"case 'mySql':",
				"document.querySelector('#col_card-mySqlGroup1').classList.remove('d-none')",
				"break",
				"case 'postgreSQL':",
				"document.querySelector('#col_card-postgreSQLGroup1').classList.remove('d-none')",
				"break",
				"case 'wcf':",
				"document.querySelector('#col_card-wcfGroup1').classList.remove('d-none')",
				"break",
				"case 'restApi':",
				"document.querySelector('#col_card-restApiGroup1').classList.remove('d-none')",
				"break",
				"}",
				"",
				"if(!(val=='' || val=='fileUpload')){",
				"document.querySelector('#col_viaLocalConnector').classList.remove('d-none')",
				"if(document.querySelector('input[data-field=\"viaLocalConnector\"]').checked){",
				"document.querySelector('#col_card-localConnectorGroup1').classList.remove('d-none')",
				"}",
				"}",
				"",
				"}",
				"",
				"function sqlServerConnectionTypeChanged(){",
				"var val=document.querySelector('select[data-field=\"sqlServer.connectionType\"]').value",
				"document.querySelector('#col_sqlServer_connectionString').classList.add('d-none')",
				"document.querySelector('#col_sqlServer_configObject').classList.add('d-none')",
				"switch(val){",
				"case 'connectionString':",
				"document.querySelector('#col_sqlServer_connectionString').classList.remove('d-none')",
				"break",
				"case 'configObject':",
				"document.querySelector('#col_sqlServer_configObject').classList.remove('d-none')",
				"break",
				"}",
				"}",
				"",
				"function fileUploadTypeChange(){",
				"var val=document.querySelector('select[data-field=\"fileUpload.type\"]').value",
				"document.querySelector('#col_card-csvGroup1').classList.add('d-none')",
				"document.querySelector('#col_card-excelGroup1').classList.add('d-none')",
				"switch(val){",
				"case 'csv':",
				"document.querySelector('#col_card-csvGroup1').classList.remove('d-none')",
				"break",
				"case 'excel':",
				"document.querySelector('#col_card-excelGroup1').classList.remove('d-none')",
				"break",
				"}",
				"",
				"}",
				"function fileSystemTypeChange(){",
				"var val=document.querySelector('select[data-field=\"fileSystem.type\"]').value",
				"document.querySelector('#col_card-csvGroup2').classList.add('d-none')",
				"document.querySelector('#col_card-excelGroup2').classList.add('d-none')",
				"switch(val){",
				"case 'csv':",
				"document.querySelector('#col_card-csvGroup2').classList.remove('d-none')",
				"break",
				"case 'excel':",
				"document.querySelector('#col_card-excelGroup2').classList.remove('d-none')",
				"break",
				"}",
				"",
				"}",
				"$(document).on('loaded', function (e) {",
				"importerTypeChange()",
				"$(this).off(e)",
				"})"
			]
		}
	]
}